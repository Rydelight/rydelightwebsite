{"data":"(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{4501:function(e,t,a){Promise.resolve().then(a.bind(a,4483))},4483:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return z}});var s=a(7437),i=a(2265),r=a(3287),l=a(9345),n=a(2489),o=a(8293);function c(){let[e,t]=(0,i.useState)(!1),[a,c]=(0,i.useState)(!1);(0,i.useEffect)(()=>{let e=()=>{t(window.scrollY>50)};return window.addEventListener("scroll",e),()=>window.removeEventListener("scroll",e)},[]);let d=e=>{let t=document.getElementById(e);t&&t.scrollIntoView({behavior:"smooth"}),c(!1)},m=[{name:"About",id:"about"},{name:"Services",id:"services"},{name:"Vehicle",id:"vehicle"},{name:"Service Area",id:"service-area"},{name:"Contact",id:"contact"}];return(0,s.jsx)(r.E.header,{className:"fixed top-0 left-0 right-0 z-50 transition-all duration-300 ".concat(e?"bg-white/95 backdrop-blur-md shadow-lg":"bg-transparent"),initial:{y:-100},animate:{y:0},transition:{duration:.5},children:(0,s.jsxs)("div",{className:"container-max",children:[(0,s.jsxs)("div",{className:"flex items-center justify-between h-20 px-4 sm:px-6 lg:px-8",children:[(0,s.jsxs)(r.E.div,{className:"flex items-center space-x-3",whileHover:{scale:1.05},children:[(0,s.jsx)("div",{className:"w-12 h-12 rounded-lg overflow-hidden",children:(0,s.jsx)("img",{src:"/images/LogoSquareTransparent.png",alt:"Rydelight Logo",className:"w-full h-full object-contain"})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h1",{className:"text-2xl font-bold text-gray-900",children:"RYDELIGHT"}),(0,s.jsx)("p",{className:"text-sm text-gray-600",children:"Premium Chauffeur Service"})]})]}),(0,s.jsx)("nav",{className:"hidden lg:flex items-center space-x-8",children:m.map(e=>(0,s.jsx)("button",{onClick:()=>d(e.id),className:"text-gray-700 hover:text-[#0091ea] font-medium transition-colors duration-200",children:e.name},e.id))}),(0,s.jsxs)("div",{className:"hidden lg:flex items-center space-x-4",children:[(0,s.jsxs)("a",{href:"mailto:booking@rydelight.com",className:"flex items-center space-x-2 text-gray-600 hover:text-[#0091ea] transition-colors",children:[(0,s.jsx)(l.Z,{className:"w-4 h-4"}),(0,s.jsx)("span",{className:"text-sm",children:"booking@rydelight.com"})]}),(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"btn-primary",children:"Book Now"})]}),(0,s.jsx)("button",{className:"lg:hidden p-2",onClick:()=>c(!a),children:a?(0,s.jsx)(n.Z,{className:"w-6 h-6 text-gray-700"}):(0,s.jsx)(o.Z,{className:"w-6 h-6 text-gray-700"})})]}),a&&(0,s.jsx)(r.E.div,{className:"lg:hidden bg-white border-t border-gray-200",initial:{opacity:0,height:0},animate:{opacity:1,height:"auto"},exit:{opacity:0,height:0},children:(0,s.jsxs)("div",{className:"px-4 py-6 space-y-4",children:[m.map(e=>(0,s.jsx)("button",{onClick:()=>d(e.id),className:"block w-full text-left text-gray-700 hover:text-[#0091ea] font-medium py-2",children:e.name},e.id)),(0,s.jsxs)("div",{className:"pt-4 border-t border-gray-200",children:[(0,s.jsxs)("a",{href:"mailto:booking@rydelight.com",className:"flex items-center space-x-2 text-gray-600 hover:text-[#0091ea] transition-colors mb-4",children:[(0,s.jsx)(l.Z,{className:"w-4 h-4"}),(0,s.jsx)("span",{className:"text-sm",children:"booking@rydelight.com"})]}),(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"btn-primary w-full text-center block",children:"Book Now"})]})]})})]})})}var d=a(6595),m=a(8906),x=a(1723),h=a(6858),p=a(3145);function u(){return(0,s.jsxs)("section",{className:"relative min-h-screen flex items-center justify-center overflow-hidden",children:[(0,s.jsx)("div",{className:"absolute inset-0 z-0",children:(0,s.jsx)("div",{className:"relative w-full h-full bg-gradient-to-r from-black/60 to-black/40",children:(0,s.jsx)(p.default,{src:"https://content.app-sources.com/s/29293006541839925/uploads/Cars/2020-Tesla-Model-Y-front-4479907.png",alt:"Rydelight Tesla Model Y at DFW Airport",fill:!0,className:"object-cover",priority:!0})})}),(0,s.jsx)("div",{className:"relative z-10 container-max px-4 sm:px-6 lg:px-8 text-center text-white",children:(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:{opacity:1,y:0},transition:{duration:.8},className:"max-w-4xl mx-auto",children:[(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:30},animate:{opacity:1,y:0},transition:{duration:.8,delay:.2},className:"flex items-center justify-center space-x-6 mb-8",children:[(0,s.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,s.jsx)(d.Z,{className:"w-5 h-5 text-yellow-400 fill-current"}),(0,s.jsx)("span",{className:"text-sm font-medium",children:"Premium Service"})]}),(0,s.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,s.jsx)(m.Z,{className:"w-5 h-5 text-green-400"}),(0,s.jsx)("span",{className:"text-sm font-medium",children:"Fully Insured"})]}),(0,s.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,s.jsx)(x.Z,{className:"w-5 h-5 text-blue-400"}),(0,s.jsx)("span",{className:"text-sm font-medium",children:"On-Time Guarantee"})]})]}),(0,s.jsxs)(r.E.h1,{initial:{opacity:0,y:30},animate:{opacity:1,y:0},transition:{duration:.8,delay:.4},className:"text-5xl md:text-7xl font-bold mb-6 leading-tight",children:["Premium Chauffeur Service",(0,s.jsx)("span",{className:"block text-[#0091ea]",children:"in DFW Metro"})]}),(0,s.jsx)(r.E.p,{initial:{opacity:0,y:30},animate:{opacity:1,y:0},transition:{duration:.8,delay:.6},className:"text-xl md:text-2xl mb-8 text-gray-200 max-w-3xl mx-auto leading-relaxed",children:"Experience luxury transportation in our brand new 2025 Tesla Model Y. Perfect for business executives, airport transfers, and special occasions."}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:30},animate:{opacity:1,y:0},transition:{duration:.8,delay:.8},className:"flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-6",children:[(0,s.jsxs)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"btn-primary text-lg px-10 py-4 flex items-center space-x-2 group",children:[(0,s.jsx)("span",{children:"Book Your Ride"}),(0,s.jsx)(h.Z,{className:"w-5 h-5 group-hover:translate-x-1 transition-transform"})]}),(0,s.jsx)("button",{onClick:()=>{var e;return null===(e=document.getElementById("services"))||void 0===e?void 0:e.scrollIntoView({behavior:"smooth"})},className:"btn-secondary text-lg px-10 py-4 bg-white/10 backdrop-blur-sm border-white/30 text-white hover:bg-white hover:text-gray-900",children:"View Services"})]}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:30},animate:{opacity:1,y:0},transition:{duration:.8,delay:1},className:"mt-16 grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto",children:[(0,s.jsxs)("div",{className:"text-center",children:[(0,s.jsx)("div",{className:"w-16 h-16 bg-[#0091ea] rounded-full flex items-center justify-center mx-auto mb-4",children:(0,s.jsx)("span",{className:"text-2xl font-bold",children:"✈️"})}),(0,s.jsx)("h3",{className:"text-xl font-semibold mb-2",children:"Airport Transfers"}),(0,s.jsx)("p",{className:"text-gray-300",children:"Reliable transportation to/from DFW and Love Field airports"})]}),(0,s.jsxs)("div",{className:"text-center",children:[(0,s.jsx)("div",{className:"w-16 h-16 bg-[#0091ea] rounded-full flex items-center justify-center mx-auto mb-4",children:(0,s.jsx)("span",{className:"text-2xl font-bold",children:"\uD83C\uDFE2"})}),(0,s.jsx)("h3",{className:"text-xl font-semibold mb-2",children:"Business Travel"}),(0,s.jsx)("p",{className:"text-gray-300",children:"Professional service for executives and corporate events"})]}),(0,s.jsxs)("div",{className:"text-center",children:[(0,s.jsx)("div",{className:"w-16 h-16 bg-[#0091ea] rounded-full flex items-center justify-center mx-auto mb-4",children:(0,s.jsx)("span",{className:"text-2xl font-bold",children:"\uD83C\uDF89"})}),(0,s.jsx)("h3",{className:"text-xl font-semibold mb-2",children:"Special Occasions"}),(0,s.jsx)("p",{className:"text-gray-300",children:"Weddings, birthdays, and memorable events"})]})]})]})}),(0,s.jsx)(r.E.div,{initial:{opacity:0},animate:{opacity:1},transition:{duration:1,delay:1.5},className:"absolute bottom-8 left-1/2 transform -translate-x-1/2",children:(0,s.jsx)(r.E.div,{animate:{y:[0,10,0]},transition:{duration:2,repeat:1/0},className:"w-6 h-10 border-2 border-white rounded-full flex justify-center",children:(0,s.jsx)(r.E.div,{animate:{y:[0,12,0]},transition:{duration:2,repeat:1/0},className:"w-1 h-3 bg-white rounded-full mt-2"})})})]})}var g=a(8664),y=a(5805),f=a(3327);function v(){let[e,t]=(0,g.YD)({triggerOnce:!0,threshold:.1}),a=[{number:"100%",label:"On-Time Arrivals",icon:x.Z},{number:"100+",label:"Happy Clients",icon:y.Z},{number:"5★",label:"Average Rating",icon:f.Z},{number:"24/7",label:"Available Service",icon:m.Z}];return(0,s.jsx)("section",{id:"about",className:"section-padding bg-gray-50",children:(0,s.jsxs)("div",{className:"container-max",children:[(0,s.jsxs)(r.E.div,{ref:e,initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8},className:"text-center mb-16",children:[(0,s.jsxs)("h2",{className:"text-4xl md:text-5xl font-bold text-gray-900 mb-6",children:["About ",(0,s.jsx)("span",{className:"text-gradient",children:"Rydelight"})]}),(0,s.jsx)("p",{className:"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed",children:"Your trusted chauffeur service in the DFW metro area, providing premium transportation with our brand new 2025 Tesla Model Y."})]}),(0,s.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center",children:[(0,s.jsxs)(r.E.div,{initial:{opacity:0,x:-50},animate:t?{opacity:1,x:0}:{},transition:{duration:.8,delay:.2},children:[(0,s.jsx)("h3",{className:"text-3xl font-bold text-gray-900 mb-6",children:"Professional, Reliable, Luxurious"}),(0,s.jsxs)("div",{className:"space-y-6 text-gray-600 text-lg leading-relaxed",children:[(0,s.jsx)("p",{children:"As an owner-operated chauffeur service, I personally ensure every ride meets the highest standards of comfort, safety, and professionalism. Whether you're a business executive needing reliable airport transportation or someone requiring assistance with mobility and errands, I'm here to serve you."}),(0,s.jsx)("p",{children:"My 2025 Tesla Model Y offers the perfect combination of luxury, technology, and environmental consciousness. With its spacious interior, advanced safety features, and whisper-quiet operation, every journey becomes a premium experience."}),(0,s.jsx)("p",{children:"Serving the greater DFW metro area within 75 miles, I specialize in airport transfers while also providing transportation for special occasions, corporate events, and daily assistance needs."})]}),(0,s.jsx)("div",{className:"mt-8",children:(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"btn-primary inline-flex items-center space-x-2",children:(0,s.jsx)("span",{children:"Experience the Difference"})})})]}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,x:50},animate:t?{opacity:1,x:0}:{},transition:{duration:.8,delay:.4},className:"relative",children:[(0,s.jsx)("div",{className:"relative aspect-[4/3] rounded-2xl overflow-hidden shadow-2xl",children:(0,s.jsx)(p.default,{src:"https://azlimo.com/wp-content/uploads/2021/01/What-makes-a-great-chauffeur.jpg",alt:"Professional chauffeur with Tesla Model Y",fill:!0,className:"object-cover"})}),(0,s.jsx)("div",{className:"absolute -bottom-6 -right-6 bg-[#0091ea] text-white p-6 rounded-xl shadow-lg",children:(0,s.jsxs)("div",{className:"text-center",children:[(0,s.jsx)("div",{className:"text-2xl font-bold",children:"2025"}),(0,s.jsx)("div",{className:"text-sm",children:"Tesla Model Y"})]})})]})]}),(0,s.jsx)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:.6},className:"mt-20 grid grid-cols-2 md:grid-cols-4 gap-8",children:a.map((e,a)=>(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:30},animate:t?{opacity:1,y:0}:{},transition:{duration:.6,delay:.8+.1*a},className:"text-center feature-card",children:[(0,s.jsx)("div",{className:"w-16 h-16 bg-[#0091ea] rounded-full flex items-center justify-center mx-auto mb-4",children:(0,s.jsx)(e.icon,{className:"w-8 h-8 text-white"})}),(0,s.jsx)("div",{className:"text-3xl font-bold text-gray-900 mb-2 animate-count-up",children:e.number}),(0,s.jsx)("div",{className:"text-gray-600 font-medium",children:e.label})]},e.label))})]})})}var b=a(6381),j=a(8420),N=a(8997),w=a(1047),k=a(5900),E=a(9474),S=a(3774),Z=a(7438);function A(){let[e,t]=(0,g.YD)({triggerOnce:!0,threshold:.1}),a=[{category:"Airport Services",icon:b.Z,color:"bg-blue-500",services:["Airport Transfers","Airport Drop Off","Airport Pick Up"],description:"Reliable transportation to/from DFW and Love Field airports",featured:!0},{category:"Corporate",icon:j.Z,color:"bg-gray-700",services:["Business Meetings","Corporate Events","Executive Transport"],description:"Professional service for business executives and corporate needs"},{category:"Special Occasions",icon:N.Z,color:"bg-pink-500",services:["Weddings","Anniversaries","Date Nights"],description:"Make your special moments even more memorable"},{category:"Celebrations",icon:w.Z,color:"bg-purple-500",services:["Birthdays","Sweet 16","Quincea\xf1era","21st Birthday"],description:"Celebrate in style with luxury transportation"},{category:"School Events",icon:k.Z,color:"bg-green-500",services:["Prom","Homecoming","Graduation"],description:"Safe and elegant transportation for school events"},{category:"Entertainment",icon:E.Z,color:"bg-orange-500",services:["Sporting Events","Concerts","Night Out"],description:"Enjoy events without worrying about transportation"},{category:"Personal Services",icon:S.Z,color:"bg-teal-500",services:["Medical Appointments","Shopping","Point-to-Point"],description:"Assistance with daily needs and errands"},{category:"Leisure",icon:x.Z,color:"bg-indigo-500",services:["Day Tours","Sightseeing","Custom Trips"],description:"Explore the DFW area in comfort and style"}];return(0,s.jsx)("section",{id:"services",className:"section-padding bg-white",children:(0,s.jsxs)("div",{className:"container-max",children:[(0,s.jsxs)(r.E.div,{ref:e,initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8},className:"text-center mb-16",children:[(0,s.jsxs)("h2",{className:"text-4xl md:text-5xl font-bold text-gray-900 mb-6",children:["Our ",(0,s.jsx)("span",{className:"text-gradient",children:"Services"})]}),(0,s.jsx)("p",{className:"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed",children:"From airport transfers to special occasions, we provide premium chauffeur services for every need in the DFW metro area."})]}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:.2},className:"mb-16 bg-gradient-to-br from-purple-900 via-purple-800 to-indigo-900 rounded-3xl p-8 md:p-12 text-white relative overflow-hidden",children:[(0,s.jsxs)("div",{className:"absolute inset-0 opacity-10",children:[(0,s.jsx)("div",{className:"absolute top-10 left-10 w-32 h-32 border border-white/20 rounded-full"}),(0,s.jsx)("div",{className:"absolute bottom-10 right-10 w-24 h-24 border border-white/20 rounded-full"}),(0,s.jsx)("div",{className:"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-40 h-40 border border-white/10 rounded-full"})]}),(0,s.jsxs)("div",{className:"relative z-10",children:[(0,s.jsxs)("div",{className:"flex items-center justify-center mb-6",children:[(0,s.jsx)("div",{className:"bg-white/20 backdrop-blur-sm rounded-2xl p-4 mr-4",children:(0,s.jsx)(Z.Z,{className:"w-12 h-12 text-white"})}),(0,s.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,s.jsx)(d.Z,{className:"w-6 h-6 text-yellow-400 fill-current"}),(0,s.jsx)("span",{className:"text-2xl font-bold",children:"Premium Experience"})]})]}),(0,s.jsx)("h3",{className:"text-4xl md:text-5xl font-bold text-center mb-6",children:"Sip & Ride"}),(0,s.jsx)("p",{className:"text-xl text-center mb-8 opacity-90 max-w-3xl mx-auto leading-relaxed",children:"Elevate your journey with our exclusive beverage service. Enjoy premium drinks perfectly chilled in our Tesla's sub-trunk freezer while you travel in luxury."}),(0,s.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8",children:[(0,s.jsxs)("div",{className:"bg-white/10 backdrop-blur-sm rounded-2xl p-6",children:[(0,s.jsxs)("h4",{className:"text-2xl font-bold mb-4 flex items-center",children:[(0,s.jsx)(Z.Z,{className:"w-6 h-6 mr-3"}),"Available Beverages"]}),(0,s.jsx)("div",{className:"grid grid-cols-2 gap-3",children:["Red Wine","Ros\xe9 Wine","White Wine","Premium Water","Topo Chico","Titos Vodka"].map((e,t)=>(0,s.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,s.jsx)("div",{className:"w-2 h-2 bg-yellow-400 rounded-full flex-shrink-0"}),(0,s.jsx)("span",{className:"text-sm",children:e})]},t))}),(0,s.jsx)("p",{className:"text-sm opacity-75 mt-3",children:"Special requests available with additional fee"})]}),(0,s.jsxs)("div",{className:"bg-white/10 backdrop-blur-sm rounded-2xl p-6",children:[(0,s.jsxs)("h4",{className:"text-2xl font-bold mb-4 flex items-center",children:[(0,s.jsx)(d.Z,{className:"w-6 h-6 mr-3"}),"Perfect For"]}),(0,s.jsx)("ul",{className:"space-y-2",children:["Hotel guests seeking luxury","Corporate professionals","Romantic evenings","Special celebrations","Airport transfers with style","Business entertainment"].map((e,t)=>(0,s.jsxs)("li",{className:"flex items-center space-x-2",children:[(0,s.jsx)("div",{className:"w-2 h-2 bg-yellow-400 rounded-full flex-shrink-0"}),(0,s.jsx)("span",{className:"text-sm",children:e})]},t))})]})]}),(0,s.jsxs)("div",{className:"bg-white/10 backdrop-blur-sm rounded-2xl p-6 mb-8",children:[(0,s.jsx)("h4",{className:"text-lg font-bold mb-3",children:"Important Information"}),(0,s.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm",children:[(0,s.jsxs)("div",{className:"flex items-start space-x-2",children:[(0,s.jsx)("div",{className:"w-2 h-2 bg-yellow-400 rounded-full mt-2 flex-shrink-0"}),(0,s.jsxs)("span",{children:[(0,s.jsx)("strong",{children:"Age Requirement:"})," 21+ for alcoholic beverages"]})]}),(0,s.jsxs)("div",{className:"flex items-start space-x-2",children:[(0,s.jsx)("div",{className:"w-2 h-2 bg-yellow-400 rounded-full mt-2 flex-shrink-0"}),(0,s.jsxs)("span",{children:[(0,s.jsx)("strong",{children:"Advance Booking:"})," Request when scheduling"]})]}),(0,s.jsxs)("div",{className:"flex items-start space-x-2",children:[(0,s.jsx)("div",{className:"w-2 h-2 bg-yellow-400 rounded-full mt-2 flex-shrink-0"}),(0,s.jsxs)("span",{children:[(0,s.jsx)("strong",{children:"Temperature:"})," Perfectly chilled in sub-trunk freezer"]})]})]})]}),(0,s.jsx)("div",{className:"text-center",children:(0,s.jsxs)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"bg-white text-purple-900 hover:bg-gray-100 font-bold py-4 px-8 rounded-xl transition-all duration-300 inline-flex items-center space-x-2 text-lg",children:[(0,s.jsx)(Z.Z,{className:"w-5 h-5"}),(0,s.jsx)("span",{children:"Book Sip & Ride Experience"})]})})]})]}),(0,s.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8",children:a.map((e,a)=>(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.6,delay:.1*a},className:"service-card p-6 relative overflow-hidden ".concat(e.featured?"ring-2 ring-[#0091ea] ring-offset-2":""),children:[e.featured&&(0,s.jsx)("div",{className:"absolute top-0 right-0 bg-[#0091ea] text-white px-3 py-1 text-sm font-semibold rounded-bl-lg",children:"Most Popular"}),(0,s.jsx)("div",{className:"w-16 h-16 ".concat(e.color," rounded-xl flex items-center justify-center mb-6"),children:(0,s.jsx)(e.icon,{className:"w-8 h-8 text-white"})}),(0,s.jsx)("h3",{className:"text-xl font-bold text-gray-900 mb-3",children:e.category}),(0,s.jsx)("p",{className:"text-gray-600 mb-4 text-sm leading-relaxed",children:e.description}),(0,s.jsx)("ul",{className:"space-y-2 mb-6",children:e.services.map((e,t)=>(0,s.jsxs)("li",{className:"text-sm text-gray-700 flex items-center",children:[(0,s.jsx)("div",{className:"w-2 h-2 bg-[#0091ea] rounded-full mr-3 flex-shrink-0"}),e]},t))}),(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"w-full text-center py-3 px-4 rounded-lg font-semibold transition-all duration-300 block ".concat(e.featured?"bg-[#0091ea] text-white hover:bg-[#0077c2]":"bg-gray-100 text-gray-700 hover:bg-gray-200"),children:"Book Now"})]},e.category))}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:.8},className:"mt-16 text-center bg-gradient-to-r from-[#0091ea] to-[#42a5f5] rounded-2xl p-12 text-white",children:[(0,s.jsx)("h3",{className:"text-3xl font-bold mb-4",children:"Don't See Your Occasion Listed?"}),(0,s.jsx)("p",{className:"text-xl mb-8 opacity-90",children:"We provide custom transportation solutions for any event or need. Contact us to discuss your specific requirements."}),(0,s.jsxs)("div",{className:"flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-6",children:[(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"bg-white text-[#0091ea] hover:bg-gray-100 font-semibold py-3 px-8 rounded-lg transition-all duration-300",children:"Get Custom Quote"}),(0,s.jsx)("a",{href:"mailto:booking@rydelight.com",className:"border-2 border-white text-white hover:bg-white hover:text-[#0091ea] font-semibold py-3 px-8 rounded-lg transition-all duration-300",children:"Email Us"})]})]})]})})}var C=a(1239),D=a(2926),R=a(4586),T=a(1706),W=a(3388),F=a(9547);function P(){let[e,t]=(0,g.YD)({triggerOnce:!0,threshold:.1}),a=[{icon:C.Z,title:"Electric Performance",description:"Zero emissions with instant acceleration and whisper-quiet operation"},{icon:m.Z,title:"Advanced Safety",description:"5-star safety rating with Autopilot and collision avoidance systems"},{icon:D.Z,title:"Premium Connectivity",description:"High-speed internet and entertainment system for productive travel"},{icon:R.Z,title:"Climate Control",description:"Dual-zone climate control with HEPA air filtration system"},{icon:T.Z,title:"Premium Audio",description:"14-speaker sound system for an immersive audio experience"},{icon:W.Z,title:"Smart Features",description:"Wireless charging, USB-C ports, and mobile app integration"},{icon:F.Z,title:"Eco-Friendly",description:"Sustainable luxury with zero local emissions"},{icon:d.Z,title:"Luxury Interior",description:"White vegan leather seats with panoramic glass roof"}];return(0,s.jsxs)("section",{id:"vehicle",className:"section-padding bg-gray-900 text-white relative overflow-hidden",children:[(0,s.jsx)("div",{className:"absolute inset-0 opacity-10",children:(0,s.jsx)("div",{className:"absolute inset-0 bg-gradient-to-br from-[#0091ea] to-transparent"})}),(0,s.jsxs)("div",{className:"container-max relative z-10",children:[(0,s.jsxs)(r.E.div,{ref:e,initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8},className:"text-center mb-16",children:[(0,s.jsxs)("h2",{className:"text-4xl md:text-5xl font-bold mb-6",children:["Experience the ",(0,s.jsx)("span",{className:"text-[#0091ea]",children:"2025 Tesla Model Y"})]}),(0,s.jsx)("p",{className:"text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed",children:"Travel in our brand new Tesla Model Y, combining luxury, technology, and environmental consciousness for the ultimate chauffeur experience."})]}),(0,s.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center mb-16",children:[(0,s.jsx)(r.E.div,{initial:{opacity:0,x:-50},animate:t?{opacity:1,x:0}:{},transition:{duration:.8,delay:.2},className:"relative",children:(0,s.jsx)("div",{className:"relative aspect-[4/3] rounded-2xl overflow-hidden",children:(0,s.jsx)(p.default,{src:"/images/luggagescifi.jpg",alt:"2025 Tesla Model Y with Professional Chauffeur Service - Rydelight",fill:!0,className:"object-cover"})})}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,x:50},animate:t?{opacity:1,x:0}:{},transition:{duration:.8,delay:.4},children:[(0,s.jsx)("h3",{className:"text-3xl font-bold mb-8",children:"Vehicle Specifications"}),(0,s.jsx)("div",{className:"space-y-4",children:[{label:"Model Year",value:"2025"},{label:"Vehicle",value:"Tesla Model Y"},{label:"Color",value:"Black Exterior"},{label:"Interior",value:"White Vegan Leather"},{label:"Seating",value:"Up to 5 Passengers"},{label:"Range",value:"330+ Miles"}].map((e,a)=>(0,s.jsxs)(r.E.div,{initial:{opacity:0,x:30},animate:t?{opacity:1,x:0}:{},transition:{duration:.6,delay:.6+.1*a},className:"flex justify-between items-center py-3 border-b border-gray-700",children:[(0,s.jsx)("span",{className:"text-gray-300 font-medium",children:e.label}),(0,s.jsx)("span",{className:"text-white font-semibold",children:e.value})]},e.label))}),(0,s.jsx)("div",{className:"mt-8",children:(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"btn-primary inline-flex items-center space-x-2",children:(0,s.jsx)("span",{children:"Book Your Tesla Experience"})})})]})]}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:.6},children:[(0,s.jsx)("h3",{className:"text-3xl font-bold text-center mb-12",children:"Premium Features"}),(0,s.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8",children:a.map((e,a)=>(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:30},animate:t?{opacity:1,y:0}:{},transition:{duration:.6,delay:.8+.1*a},className:"bg-gray-800 rounded-xl p-6 hover:bg-gray-700 transition-all duration-300 border border-gray-700",children:[(0,s.jsx)("div",{className:"w-12 h-12 bg-[#0091ea] rounded-lg flex items-center justify-center mb-4",children:(0,s.jsx)(e.icon,{className:"w-6 h-6 text-white"})}),(0,s.jsx)("h4",{className:"text-lg font-semibold mb-3",children:e.title}),(0,s.jsx)("p",{className:"text-gray-300 text-sm leading-relaxed",children:e.description})]},e.title))})]}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:1},className:"mt-20 text-center",children:[(0,s.jsx)("h3",{className:"text-3xl font-bold mb-8",children:"Luxurious Interior"}),(0,s.jsx)("div",{className:"relative aspect-[16/9] rounded-2xl overflow-hidden max-w-4xl mx-auto",children:(0,s.jsx)(p.default,{src:"https://i.ytimg.com/vi/cRsjFIU9PXE/maxresdefault.jpg",alt:"Tesla Model Y Interior - White Vegan Leather",fill:!0,className:"object-cover"})}),(0,s.jsx)("p",{className:"text-gray-300 mt-6 max-w-2xl mx-auto",children:"Relax in premium white vegan leather seats under a panoramic glass roof, enjoying the spacious and modern interior designed for ultimate comfort."})]})]})]})}function Y(){let[e,t]=(0,g.YD)({triggerOnce:!0,threshold:.1}),a=[{name:"DFW Airport",type:"Airport",icon:b.Z,description:"Primary airport serving the Dallas-Fort Worth metroplex"},{name:"Love Field Airport",type:"Airport",icon:b.Z,description:"Dallas city airport with convenient downtown access"},{name:"Downtown Dallas",type:"Business District",icon:j.Z,description:"Central business district and corporate headquarters"},{name:"Downtown Fort Worth",type:"Business District",icon:j.Z,description:"Historic downtown and cultural district"},{name:"Plano",type:"Suburb",icon:S.Z,description:"Corporate corridor and residential area"},{name:"Irving",type:"Suburb",icon:S.Z,description:"Business hub near DFW Airport"},{name:"Arlington",type:"Suburb",icon:S.Z,description:"Entertainment district and sports venues"},{name:"Frisco",type:"Suburb",icon:S.Z,description:"Rapidly growing business and residential area"}],i=[{icon:x.Z,title:"75-Mile Radius",description:"Comprehensive coverage of the greater DFW metro area"},{icon:S.Z,title:"Door-to-Door",description:"Pick up and drop off at any location within our service area"},{icon:b.Z,title:"Airport Specialists",description:"Expert knowledge of DFW and Love Field terminals"}];return(0,s.jsx)("section",{id:"service-area",className:"section-padding bg-gray-50",children:(0,s.jsxs)("div",{className:"container-max",children:[(0,s.jsxs)(r.E.div,{ref:e,initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8},className:"text-center mb-16",children:[(0,s.jsxs)("h2",{className:"text-4xl md:text-5xl font-bold text-gray-900 mb-6",children:["Our ",(0,s.jsx)("span",{className:"text-gradient",children:"Service Area"})]}),(0,s.jsx)("p",{className:"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed",children:"Serving the entire DFW metro area within a 75-mile radius, with specialized focus on airport transfers and business districts."})]}),(0,s.jsx)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:.2},className:"grid grid-cols-1 md:grid-cols-3 gap-8 mb-16",children:i.map((e,a)=>(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:30},animate:t?{opacity:1,y:0}:{},transition:{duration:.6,delay:.4+.1*a},className:"feature-card text-center",children:[(0,s.jsx)("div",{className:"w-16 h-16 bg-[#0091ea] rounded-full flex items-center justify-center mx-auto mb-4",children:(0,s.jsx)(e.icon,{className:"w-8 h-8 text-white"})}),(0,s.jsx)("h3",{className:"text-xl font-bold text-gray-900 mb-3",children:e.title}),(0,s.jsx)("p",{className:"text-gray-600",children:e.description})]},e.title))}),(0,s.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center",children:[(0,s.jsx)(r.E.div,{initial:{opacity:0,x:-50},animate:t?{opacity:1,x:0}:{},transition:{duration:.8,delay:.6},className:"relative",children:(0,s.jsxs)("div",{className:"relative aspect-square rounded-2xl overflow-hidden shadow-2xl",children:[(0,s.jsx)(p.default,{src:"https://lh5.googleusercontent.com/proxy/fA4kmiqY7_U8JaUcLlCRMwdmvYAmSdaqI96FZKZZopLj1SuP3wYc7CAAtG96W1ksFdyoJ62U-cpvLR_TQ8GFQvA60HUoXNCS2dfTXSMlGpeDIqtzdi2IZQB7BmeuxGJlnDSM0LJwCfCC=s0-d",alt:"DFW Metro Area Service Map",fill:!0,className:"object-cover"}),(0,s.jsx)("div",{className:"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"}),(0,s.jsxs)("div",{className:"absolute bottom-6 left-6 text-white",children:[(0,s.jsx)("h3",{className:"text-2xl font-bold mb-2",children:"75-Mile Coverage"}),(0,s.jsx)("p",{className:"text-gray-200",children:"Complete DFW Metro Area"})]})]})}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,x:50},animate:t?{opacity:1,x:0}:{},transition:{duration:.8,delay:.8},children:[(0,s.jsx)("h3",{className:"text-3xl font-bold text-gray-900 mb-8",children:"Key Service Locations"}),(0,s.jsx)("div",{className:"space-y-4",children:a.map((e,a)=>(0,s.jsx)(r.E.div,{initial:{opacity:0,x:30},animate:t?{opacity:1,x:0}:{},transition:{duration:.6,delay:1+.1*a},className:"bg-white rounded-lg p-4 shadow-md hover:shadow-lg transition-all duration-300 border border-gray-200",children:(0,s.jsxs)("div",{className:"flex items-center space-x-4",children:[(0,s.jsx)("div",{className:"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center",children:(0,s.jsx)(e.icon,{className:"w-6 h-6 text-[#0091ea]"})}),(0,s.jsxs)("div",{className:"flex-1",children:[(0,s.jsx)("h4",{className:"text-lg font-semibold text-gray-900 mb-1",children:e.name}),(0,s.jsx)("p",{className:"text-gray-600 text-sm",children:e.description}),(0,s.jsx)("span",{className:"inline-block mt-1 px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-full",children:e.type})]})]})},e.name))})]})]}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:1.2},className:"mt-16 text-center bg-white rounded-2xl p-12 shadow-lg border border-gray-200",children:[(0,s.jsx)("h3",{className:"text-3xl font-bold text-gray-900 mb-4",children:"Need Service Outside Our Area?"}),(0,s.jsx)("p",{className:"text-xl text-gray-600 mb-8",children:"Contact us for special arrangements and custom transportation solutions beyond our standard 75-mile service radius."}),(0,s.jsxs)("div",{className:"flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-6",children:[(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"btn-primary",children:"Book Standard Service"}),(0,s.jsx)("a",{href:"mailto:booking@rydelight.com",className:"btn-secondary",children:"Request Custom Service"})]})]})]})})}var M=a(4656),B=a(2369),_=JSON.parse('[{"reviewer_name":"Aennika B.","review_date":"2024-08-07","review_text":"Rydelight took our girls\' night out to the next level! The Tesla was spacious enough for all of us to chat and catch up. We popped open some bubbly from the mini fridge, and Scott even helped us...","source_platform":"Yelp","rating":5},{"reviewer_name":"Jen M.","review_date":"2024-04-26","review_text":"My flight got delayed, and Rydelight saved the day! They adjusted my pick-up time seamlessly, and the Tesla ride was smooth sailing. My driver, Scott, even offered to grab me a coffee on the way....","source_platform":"Yelp","rating":5}]');function q(){let[e,t]=(0,g.YD)({triggerOnce:!0,threshold:.1}),a=[..._.map((e,t)=>({name:e.reviewer_name,role:"Verified Customer",company:e.source_platform,rating:Math.floor(e.rating),text:e.review_text,service:"Rydelight Premium Service"})),{name:"Sarah K.",role:"Business Executive",company:"Google Reviews",rating:5,text:"Scott and the Rydelight team are absolutely fantastic! Professional, punctual, and the Tesla is spotless. Perfect for business meetings and special occasions.",service:"Rydelight Executive Service"},{name:"David R.",role:"Airport Traveler",company:"Yelp",rating:5,text:"Used Rydelight for DFW airport pickup and it was seamless. The Tesla Model Y is so comfortable and quiet. Will definitely book again for future trips.",service:"Rydelight Airport Transfer"}];return(0,s.jsx)("section",{className:"section-padding bg-white",children:(0,s.jsxs)("div",{className:"container-max",children:[(0,s.jsxs)(r.E.div,{ref:e,initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8},className:"text-center mb-16",children:[(0,s.jsxs)("h2",{className:"text-4xl md:text-5xl font-bold text-gray-900 mb-6",children:["What Our ",(0,s.jsx)("span",{className:"text-gradient",children:"Clients Say"})]}),(0,s.jsx)("p",{className:"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed",children:"Don't just take our word for it. Here's what our valued clients have to say about their Rydelight experience."})]}),(0,s.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-8",children:a.map((e,a)=>(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.6,delay:.2*a},className:"bg-gray-50 rounded-2xl p-8 relative hover:shadow-lg transition-all duration-300",children:[(0,s.jsx)(M.Z,{className:"absolute top-6 right-6 w-8 h-8 text-[#0091ea] opacity-20"}),(0,s.jsx)("div",{className:"flex items-center space-x-1 mb-6",children:[...Array(e.rating)].map((e,t)=>(0,s.jsx)(d.Z,{className:"w-5 h-5 text-yellow-400 fill-current"},t))}),(0,s.jsxs)("p",{className:"text-gray-700 text-lg leading-relaxed mb-8 italic",children:['"',e.text,'"']}),(0,s.jsxs)("div",{className:"flex items-center space-x-4",children:[(0,s.jsx)("div",{className:"relative w-16 h-16 rounded-full overflow-hidden bg-gray-200 flex items-center justify-center",children:(0,s.jsx)(B.Z,{className:"w-8 h-8 text-gray-400"})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"text-lg font-semibold text-gray-900",children:e.name}),(0,s.jsx)("p",{className:"text-gray-600",children:e.role}),(0,s.jsx)("p",{className:"text-sm text-[#0091ea] font-medium",children:e.company}),e.service&&(0,s.jsx)("p",{className:"text-xs text-gray-500 mt-1",children:e.service})]})]})]},"".concat(e.name,"-").concat(a)))}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:.8},className:"mt-16 grid grid-cols-2 md:grid-cols-4 gap-8 text-center",children:[(0,s.jsxs)("div",{className:"feature-card",children:[(0,s.jsx)("div",{className:"text-3xl font-bold text-[#0091ea] mb-2",children:"100+"}),(0,s.jsx)("div",{className:"text-gray-600",children:"Happy Clients"})]}),(0,s.jsxs)("div",{className:"feature-card",children:[(0,s.jsx)("div",{className:"text-3xl font-bold text-[#0091ea] mb-2",children:"100%"}),(0,s.jsx)("div",{className:"text-gray-600",children:"On-Time Rate"})]}),(0,s.jsxs)("div",{className:"feature-card",children:[(0,s.jsx)("div",{className:"text-3xl font-bold text-[#0091ea] mb-2",children:"5.0★"}),(0,s.jsx)("div",{className:"text-gray-600",children:"Average Rating"})]}),(0,s.jsxs)("div",{className:"feature-card",children:[(0,s.jsx)("div",{className:"text-3xl font-bold text-[#0091ea] mb-2",children:"24/7"}),(0,s.jsx)("div",{className:"text-gray-600",children:"Available"})]})]}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:1},className:"mt-16 text-center",children:[(0,s.jsx)("h3",{className:"text-3xl font-bold text-gray-900 mb-4",children:"Ready to Experience Rydelight?"}),(0,s.jsx)("p",{className:"text-xl text-gray-600 mb-8",children:"Join our satisfied clients and discover the difference of premium chauffeur service."}),(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"btn-primary text-lg px-10 py-4",children:"Book Your First Ride"})]})]})})}var I=a(3417);function O(){let[e,t]=(0,g.YD)({triggerOnce:!0,threshold:.1}),a=[{icon:l.Z,title:"Email Us",details:"booking@rydelight.com",description:"For questions and special requests",action:"mailto:booking@rydelight.com"},{icon:x.Z,title:"Service Hours",details:"24/7 Available",description:"Round-the-clock service for your convenience"},{icon:S.Z,title:"Service Area",details:"DFW Metro Area",description:"Within 75 miles of Dallas-Fort Worth"}];return(0,s.jsxs)("section",{id:"contact",className:"section-padding bg-gray-900 text-white relative overflow-hidden",children:[(0,s.jsx)("div",{className:"absolute inset-0 opacity-10",children:(0,s.jsx)("div",{className:"absolute inset-0 bg-gradient-to-br from-[#0091ea] to-transparent"})}),(0,s.jsxs)("div",{className:"container-max relative z-10",children:[(0,s.jsxs)(r.E.div,{ref:e,initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8},className:"text-center mb-16",children:[(0,s.jsxs)("h2",{className:"text-4xl md:text-5xl font-bold mb-6",children:["Get in ",(0,s.jsx)("span",{className:"text-[#0091ea]",children:"Touch"})]}),(0,s.jsx)("p",{className:"text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed",children:"Ready to book your premium chauffeur service? We're here to help with any questions or special requests you may have."})]}),(0,s.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center",children:[(0,s.jsxs)(r.E.div,{initial:{opacity:0,x:-50},animate:t?{opacity:1,x:0}:{},transition:{duration:.8,delay:.2},children:[(0,s.jsx)("h3",{className:"text-3xl font-bold mb-8",children:"Contact Information"}),(0,s.jsx)("div",{className:"space-y-8",children:a.map((e,a)=>(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:30},animate:t?{opacity:1,y:0}:{},transition:{duration:.6,delay:.4+.1*a},className:"flex items-start space-x-4",children:[(0,s.jsx)("div",{className:"w-12 h-12 bg-[#0091ea] rounded-lg flex items-center justify-center flex-shrink-0",children:(0,s.jsx)(e.icon,{className:"w-6 h-6 text-white"})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"text-xl font-semibold mb-2",children:e.title}),e.action?(0,s.jsx)("a",{href:e.action,className:"text-[#0091ea] hover:text-blue-300 font-medium text-lg transition-colors",children:e.details}):(0,s.jsx)("p",{className:"text-lg font-medium text-gray-200",children:e.details}),(0,s.jsx)("p",{className:"text-gray-400 mt-1",children:e.description})]})]},e.title))}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:30},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:.8},className:"mt-12 p-6 bg-gray-800 rounded-xl border border-gray-700",children:[(0,s.jsxs)("h4",{className:"text-xl font-semibold mb-4 flex items-center",children:[(0,s.jsx)(I.Z,{className:"w-5 h-5 mr-2 text-[#0091ea]"}),"Preferred Communication"]}),(0,s.jsx)("p",{className:"text-gray-300 mb-4",children:"We prefer email communication for booking inquiries and questions. This allows us to provide detailed responses and maintain accurate records."}),(0,s.jsxs)("a",{href:"mailto:booking@rydelight.com",className:"inline-flex items-center space-x-2 text-[#0091ea] hover:text-blue-300 font-medium transition-colors",children:[(0,s.jsx)(l.Z,{className:"w-4 h-4"}),(0,s.jsx)("span",{children:"Send us an email"})]})]})]}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,x:50},animate:t?{opacity:1,x:0}:{},transition:{duration:.8,delay:.6},className:"bg-gradient-to-br from-[#0091ea] to-[#42a5f5] rounded-2xl p-12 text-center",children:[(0,s.jsx)("h3",{className:"text-3xl font-bold mb-6",children:"Ready to Book?"}),(0,s.jsx)("p",{className:"text-xl mb-8 opacity-90",children:"Get an instant quote and book your premium chauffeur service through our secure booking platform."}),(0,s.jsxs)("div",{className:"space-y-6",children:[(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"block w-full bg-white text-[#0091ea] hover:bg-gray-100 font-semibold py-4 px-8 rounded-lg transition-all duration-300 text-lg",children:"Book Now - Get Instant Quote"}),(0,s.jsxs)("div",{className:"text-center",children:[(0,s.jsx)("p",{className:"text-sm opacity-75 mb-4",children:"Or contact us for custom requests:"}),(0,s.jsxs)("a",{href:"mailto:booking@rydelight.com",className:"inline-flex items-center space-x-2 text-white hover:text-gray-200 transition-colors",children:[(0,s.jsx)(l.Z,{className:"w-4 h-4"}),(0,s.jsx)("span",{children:"booking@rydelight.com"})]})]})]}),(0,s.jsxs)("div",{className:"mt-8 pt-8 border-t border-white/20",children:[(0,s.jsx)("h4",{className:"font-semibold mb-4",children:"Our Service Promise"}),(0,s.jsxs)("div",{className:"grid grid-cols-2 gap-4 text-sm",children:[(0,s.jsx)("div",{children:"✓ On-time guarantee"}),(0,s.jsx)("div",{children:"✓ Professional service"}),(0,s.jsx)("div",{children:"✓ Clean, luxury vehicle"}),(0,s.jsx)("div",{children:"✓ Competitive pricing"})]})]})]})]}),(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:50},animate:t?{opacity:1,y:0}:{},transition:{duration:.8,delay:1},className:"mt-16 text-center bg-gray-800 rounded-2xl p-8 border border-gray-700",children:[(0,s.jsx)("h3",{className:"text-2xl font-bold mb-4",children:"Booking Information"}),(0,s.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-6 text-sm",children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"font-semibold text-[#0091ea] mb-2",children:"Advance Booking"}),(0,s.jsx)("p",{className:"text-gray-300",children:"We recommend booking at least 24 hours in advance for guaranteed availability, though same-day service may be available."})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"font-semibold text-[#0091ea] mb-2",children:"Quote Approval"}),(0,s.jsx)("p",{className:"text-gray-300",children:"All quotes require manual approval to ensure accurate pricing and availability. You'll receive confirmation within a few hours."})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"font-semibold text-[#0091ea] mb-2",children:"Special Requests"}),(0,s.jsx)("p",{className:"text-gray-300",children:"Need child seats, wheelchair accessibility, or other accommodations? Contact us directly to discuss your specific needs."})]})]})]})]})]})}function L(){let e=new Date().getFullYear(),t=e=>{let t=document.getElementById(e);t&&t.scrollIntoView({behavior:"smooth"})};return(0,s.jsx)("footer",{className:"bg-gray-900 text-white",children:(0,s.jsxs)("div",{className:"container-max px-4 sm:px-6 lg:px-8",children:[(0,s.jsxs)("div",{className:"py-16 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8",children:[(0,s.jsxs)("div",{className:"lg:col-span-2",children:[(0,s.jsxs)(r.E.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.6},className:"flex items-center space-x-3 mb-6",children:[(0,s.jsx)("div",{className:"w-12 h-12 rounded-lg overflow-hidden bg-white/10 p-1",children:(0,s.jsx)("img",{src:"/images/LogoSquareTransparent.png",alt:"Rydelight Logo",className:"w-full h-full object-contain"})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h3",{className:"text-2xl font-bold",children:"RYDELIGHT"}),(0,s.jsx)("p",{className:"text-gray-400",children:"Premium Chauffeur Service"})]})]}),(0,s.jsx)("p",{className:"text-gray-300 mb-6 max-w-md leading-relaxed",children:"Experience luxury transportation in the DFW metro area with our brand new 2025 Tesla Model Y. Professional, reliable, and environmentally conscious chauffeur service for all your transportation needs."}),(0,s.jsxs)("div",{className:"space-y-3",children:[(0,s.jsxs)("div",{className:"flex items-center space-x-3",children:[(0,s.jsx)(l.Z,{className:"w-5 h-5 text-[#0091ea]"}),(0,s.jsx)("a",{href:"mailto:booking@rydelight.com",className:"text-gray-300 hover:text-white transition-colors",children:"booking@rydelight.com"})]}),(0,s.jsxs)("div",{className:"flex items-center space-x-3",children:[(0,s.jsx)(S.Z,{className:"w-5 h-5 text-[#0091ea]"}),(0,s.jsx)("span",{className:"text-gray-300",children:"DFW Metro Area (75-mile radius)"})]}),(0,s.jsxs)("div",{className:"flex items-center space-x-3",children:[(0,s.jsx)(x.Z,{className:"w-5 h-5 text-[#0091ea]"}),(0,s.jsx)("span",{className:"text-gray-300",children:"24/7 Service Available"})]})]})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"text-lg font-semibold mb-6",children:"Quick Links"}),(0,s.jsx)("ul",{className:"space-y-3",children:[{name:"About Us",id:"about"},{name:"Our Services",id:"services"},{name:"Vehicle Features",id:"vehicle"},{name:"Service Area",id:"service-area"}].map(e=>(0,s.jsx)("li",{children:(0,s.jsx)("button",{onClick:()=>t(e.id),className:"text-gray-300 hover:text-white transition-colors",children:e.name})},e.id))})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"text-lg font-semibold mb-6",children:"Popular Services"}),(0,s.jsxs)("ul",{className:"space-y-3 text-gray-300",children:[(0,s.jsxs)("li",{className:"flex items-center space-x-2",children:[(0,s.jsx)("span",{className:"text-yellow-400",children:"★"}),(0,s.jsx)("span",{children:"Sip & Ride Premium"})]}),(0,s.jsx)("li",{children:"Airport Transfers"}),(0,s.jsx)("li",{children:"Business Travel"}),(0,s.jsx)("li",{children:"Special Occasions"}),(0,s.jsx)("li",{children:"Corporate Events"})]}),(0,s.jsx)("div",{className:"mt-6",children:(0,s.jsx)("a",{href:"https://customer.moovs.app/rydelight/new/info",target:"_blank",rel:"noopener noreferrer",className:"btn-primary text-sm px-6 py-2",children:"Book Now"})})]})]}),(0,s.jsx)("div",{className:"py-8 border-t border-gray-800",children:(0,s.jsx)("div",{className:"flex flex-col md:flex-row items-center justify-between space-y-4 md:space-y-0",children:(0,s.jsxs)("div",{className:"text-gray-400 text-sm",children:["\xa9 ",e," Rydelight. All rights reserved."]})})})]})})}function z(){return(0,s.jsxs)("main",{className:"min-h-screen",children:[(0,s.jsx)(c,{}),(0,s.jsx)(u,{}),(0,s.jsx)(v,{}),(0,s.jsx)(A,{}),(0,s.jsx)(P,{}),(0,s.jsx)(Y,{}),(0,s.jsx)(q,{}),(0,s.jsx)(O,{}),(0,s.jsx)(L,{})]})}}},function(e){e.O(0,[732,971,117,744],function(){return e(e.s=4501)}),_N_E=e.O()}]);"}